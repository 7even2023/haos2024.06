substitutions:
  devicename: az32a00
  friendly_name: a00
  # ------------------
  #   Pin-Belegung / Switch     # GND 체ber 19   kabel schwarz/black
  # ------------------
  statusled_01red_pin: GPIO26   # a01 26Relais1 kabel lila/purple
  statusled_02green_pin: GPIO19 # a01 19Relais2 kabel grau/grey
  statusled_03blue_pin: GPIO18  # a01 18Relais3 kabel weiss/white
  
  statusled_04red_pin: GPIO4    # a01 04Relais4 kabel blau/blue
  statusled_05green_pin: GPIO2  # a01 02Relais5 Kabel gr체n/green

  pir_pin: GPIO25               # a01 Bewegung
  led_pin: GPIO27               # a01 27Relais0
  rgb_pin: GPIO14               # a01_light 8x WS2812B

esphome:
  name: $devicename
  friendly_name: ${friendly_name}
  comment: 192.168.1.127, GuestHomeLab, 8x1 RGBled, bme280, 2xfoto

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:
# level: none # default
# level: error
# level: warn
# level: info
#  level: debug
# level: verbose
# level: very_verbose

# Example configuration entry with additional service , ping port
mdns:
  disabled: false #default

# Enable Home Assistant API
api:
  encryption:
    key: "pey599bBqTgRMTJNY+FPfG9BVSKg+IVRfVIvEIH45lg="

ota:
  password: "5c89b20345b85ac796fa83d3bc594bc2"

wifi:
  ssid: 6wlan # !secret wifi_ssid
  password: !secret wifi_password

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Az32A00 Fallback Hotspot"
    password: "rn2NXRbIqsSN"

captive_portal: # fallback webseite netzwerkauswahl

web_server:
  port: 80
  version: 2
  local: true
  auth:
    username: a00
    password: control

time:
  - platform: sntp
    id: esphome_time
    servers:
      - 0.pool.ntp.org
  
binary_sensor:
  - platform: status
    name: "${friendly_name} Status"  
    id: ${friendly_name}_status

  - platform: gpio
    pin: ${pir_pin}
    name: "${friendly_name} Bewegung"
    device_class: motion
    id: ${friendly_name}_motion # rgbtreppe_pir_o
    on_press:
      then:
        # - script.execute: treppe_runter_aktivieren
        - switch.turn_on: statusled_01red_id
        - switch.turn_on: statusled_02green_id
        #- switch.turn_on: statusled_03blue_id
        - delay: 1s
        - switch.turn_off: statusled_01red_id
        #- delay: 500ms
    on_release:
      then: 
        - switch.turn_off: statusled_02green_id
        #- delay: 11s
        #- switch.turn_off: statusled_03blue_id

  - platform: gpio
    pin: GPIO34 
    name: "${friendly_name} taster1"
    id: ${friendly_name}_taster1   
    filters:
      - delayed_on: 30ms
      - delayed_off: 30ms  
    on_press:
      then:
      - switch.toggle: led_id
      - delay: 500ms

  - platform: gpio
    pin: GPIO35 
    name: "${friendly_name} taster2"
    id: ${friendly_name}_taster2
    filters:
      - delayed_on: 30ms
      - delayed_off: 30ms     
    on_release:
      then: 
      - switch.toggle: statusled_01red_id
      - delay: 500ms
      - switch.toggle: statusled_02green_id
      - delay: 500ms
      - light.toggle: a00_blue_led_light # statusled_03blue_id
      - delay: 500ms
      - switch.toggle: statusled_04red_id
      - delay: 500ms
      - switch.toggle: statusled_05green_id
      - delay: 500ms

  - platform: template
    name: "HomeLAB hell"
    lambda: |-
          if (id(source_sensor2).state > 70) {
            return true;
          } else {
            return false;
          }

i2c:
  sda: GPIO21
  scl: GPIO22
  scan: true
  id: bus_a
     
sensor:
  - platform: bme280_i2c
    temperature:
      name: "${friendly_name} BME280 Temperature"
      id: ${friendly_name}_bme280_temperature
    pressure:
      name: "${friendly_name} BME280 Pressure"
      id: ${friendly_name}_bme280_pressure
    humidity:
      name: "${friendly_name} BME280 Relative Humidity"
      id: ${friendly_name}_bme280_humidity
    address: 0x76
    update_interval: 30s

# Fotowiderstand (rechts 2.ac am relais0 default):
  -  platform: adc
     id: source_sensor2
     name: "${friendly_name} Foto Sensor32"
     pin: GPIO32  #33 orginal bei v1
     update_interval: 3s # 5stable 21,22 sec test 0 ---- 15 test1 , eco 60s
     filters:
        - offset: 0.0
        - multiply: 1.0  #3.3
        - calibrate_linear:
          - 0.0732 -> -10.00      #Foto Sensor33 Sending state 0.01311 % with 2 decimals of accuracy, only 10k , removed sensor? , GND only? 0.07500 V 0.08100 V 0% licht - 0.20800 richtig 0.1 dunkel 0.31800 V- 1.0 dunkel 0.055 1,1
          - 0.5 -> 60.00            # 0.5975 -> 50.0   0,5 / 0,5225 = 50%  math 
          - 1.045 -> 89.205        #Foto Sensor33 Sending state 100.00222 % with 2 decimals of accuracy, 3,3V -> look adc max voltage input spanne 6x GPIO32 - GIPO 39  with 1.04500 V =100% (1.1V)98.39
     #unit_of_measurement: "째C"  #ohne = Volt VCC adc spanne 0-1.1v
     unit_of_measurement: "%"

  # Fotowiderstand (links 1.ac am relais2 optional):
  -  platform: adc
     id: source_sensor0
     name: "${friendly_name} Foto Sensor33"
     pin: GPIO33  #32 orginal bei v1
     update_interval: 2s
     filters:
        - offset: 0.0
        - multiply: 1.0  #3.3
        - calibrate_linear:
          - 0.0732 -> -10.00      #0,01% only 10k , removed sensor? , GND only? 0.07500 V 0.08100 V 0% licht - 0.20800 richtig 0.1 dunkel 0.31800 V- 1.0 dunkel 0.055 1,1
          - 0.5 -> 60.00            # 0.5975 -> 50.0   0,5 / 0,5225 = 50%  math 
          - 1.045 -> 89.205        #100,01% 3,3V -> look adc max voltage input spanne 6x GPIO32 - GIPO 39  with 1.04500 V =100% (1.1V)98.39
     #unit_of_measurement: "째C"   #ohne = Volt VCC adc spanne 0-1.1v
     unit_of_measurement: "%"

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "${friendly_name} WiFi Signal"
    id: wifi_signal_db
    update_interval: 4s     #60s 120s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1
    entity_category: "diagnostic"
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "${friendly_name} WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: "Signal %"  
    entity_category: "diagnostic"

  - platform: uptime
    name: "${friendly_name} Uptime Sensor" 
    id: ${friendly_name}_uptimesensor


switch:
  - platform: restart
    name: "${friendly_name} Restart"
    id: ${friendly_name}_restart   

#  - platform: shutdown
#    name: "${friendly_name} Shutdown"  
#    id: ${friendly_name}_shutdown

  - platform: gpio
    pin: ${statusled_01red_pin}
    id: statusled_01red_id
    name: "${friendly_name} 26Relais1"

  - platform: gpio
    pin: ${statusled_02green_pin}
    id: statusled_02green_id
    name: "${friendly_name} 19Relais2"

#  - platform: gpio
#    pin: ${statusled_03blue_pin}
#    id: statusled_03blue_id
#    name: "${friendly_name} 18Relais3"

  - platform: gpio
    pin: ${statusled_04red_pin}
    id: statusled_04red_id
    name: "${friendly_name} 04Relais4"

  - platform: gpio
    pin: ${statusled_05green_pin}
    id: statusled_05green_id
    name: "${friendly_name} 02Relais5"

  - platform: gpio
    pin: ${led_pin}
    id: led_id
    name: "${friendly_name} 27Relais0"
    on_turn_on:
    - logger.log: "Switch Turned On! red"
    - switch.turn_on: statusled_04red_id
    - switch.turn_off: statusled_05green_id
    on_turn_off:
    - logger.log: "Switch Turned Off! green"
    - switch.turn_off: statusled_04red_id
    - switch.turn_on: statusled_05green_id
    restore_mode: ALWAYS_ON

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${friendly_name} IP Address"
      id: ${friendly_name}_ipaddress
    ssid:
      name: "${friendly_name} Connected SSID"
      id: ${friendly_name}_connectedssid

output:
  # Register the blue LED as a dimmable output ....
  - platform: ledc #esp8266_pwm
    id: a00_blue_led
    pin: ${statusled_03blue_pin}
    #inverted: true

light:
  # ... and then make a light out of it.
  - platform: monochromatic
    name: "a00 Light Blue LED"
    output: a00_blue_led
    #internal: true
    id: a00_blue_led_light
    default_transition_length: 500ms # 1s = 1000ms

  - platform: fastled_clockless
    chipset: WS2812B
    pin: ${rgb_pin}                                 # GPIO14
    num_leds: 8                                     # 8 - 60
    rgb_order: GRB
    name: "a00 Light"  #FastLED NEOPIXEL Light
    id: a00_light
    default_transition_length: 1s
    restore_mode: ALWAYS_OFF
    effects:
      - random:
      - random:
          name: Random Effect With Custom Values
          transition_length: 2s
          update_interval: 3s
      - strobe:
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 00%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - flicker:
      - flicker:
          name: Flicker Effect With Custom Values1
          alpha: 95%
          intensity: 1.5%
      - addressable_flicker:
      - addressable_flicker:
          name: Flicker Effect With Custom Values2
          update_interval: 16ms
          intensity: 5%
      - addressable_rainbow:
      - addressable_rainbow:
          name: Rainbow Effect Full
          speed: 10
          width: 8

      - addressable_rainbow:
          name: Rainbow Effect Half
          speed: 5
          width: 4
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Effect With Custom Values
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: false
      - addressable_scan:
      - addressable_scan:
          name: Scan Effect With Custom Values
          move_interval: 100ms
          scan_width: 1
      - addressable_twinkle:
      - addressable_twinkle:
          name: Twinkle Effect With Custom Values
          twinkle_probability: 5%
          progress_interval: 4ms
      - addressable_fireworks:
      - addressable_fireworks:
          name: Fireworks Effect With Custom Values
          update_interval: 32ms
          spark_probability: 10%
          use_random_color: false
          fade_out_rate: 120

      - automation:
          name: Custom Automation Effect
          sequence:
          - light.addressable_set:
              id: a00_light
              red: 0%
              green: 100%
              blue: 0%
          - delay: 100ms
          - light.addressable_set:
              id: a00_light
              range_from: 0
              range_to: 8
              red: 100%
              green: 0%
              blue: 0%


    