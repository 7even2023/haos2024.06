esphome:
  name: az32d05
  friendly_name: d05
  comment: 192.168.1.141, MediaPlayer, Speaker, 0xmic, 0xfoto, status leds

esp32:
  board: esp32dev
  framework:
    type: arduino

# Enable logging
logger:

# Enable Home Assistant API
api:
  encryption:
    key: "3msmphzIw/ZRAXg41P45pWWqjeaH8TKKQjVJE6j6ofo="

ota:
  password: "e05e2d52cc9f9b41644c35c001e7d953"

wifi:
  ssid: 6wlan # !secret wifi_ssid
  password: !secret wifi_password
#  power_save_mode: none
#  reboot_timeout: 0s
#  domain: ".local"       #  domain  .fritz.box 
#  output_power: 20dB
#  fast_connect: true

#  manual_ip:
#    static_ip: 192.168.1.170 # 3EG5-Garten (A) = Bereich ,  d1 unter test 1 lcd1602 time+ date over ha
#    gateway: 192.168.1.1
#    subnet: 255.255.255.0 # subnet2 test 255.255.0.0
#    dns1: 192.168.1.1
#    dns2: 8.8.8.8

  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Az32D05 Fallback Hotspot"
    password: "j1sSCqK4M6WX"

captive_portal:

##################################################################################

# https://github.com/schmurtzm/MrDiy-Audio-Notifier/blob/10ea2294db9181ba6b0cc6df2d6ee75b05082151/src/main.cpp#L107
# Example configuration entry
#______    _____   _____    ____    ___  
#|  ____|  / ____| |  __ \  |___ \  |__ \ 
#| |__    | (___   | |__) |   __) |    ) |
#|  __|    \___ \  |  ___/   |__ <    / / 
#| |____   ____) | | |       ___) |  / /_ 
#|______| |_____/  |_|      |____/  |____|
#
#+-----------------+-----------------+--------------+--------------------+
#|   audio pins    |  External DAC   | Internal DAC |       No DAC       |
#+-----------------+-----------------+--------------+--------------------+
#| DAC - LCK(LRC)  | GPIO25          | NA           | NA                 | Green = LCK
#| DAC - BCK(BCLK) | GPIO26          | NA           | NA                 | Blue = BCK
#| DAC - I2So(DIN) | GPIO22          | NA           | NA                 | Yellow = DIN
#| speaker L       | NA (on the DAC) | GPIO25       | GPIO22 (L&R mixed) | L+ and L- = speaker 8ohm 2W
#| speaker R       | NA (on the DAC) | GPIO26       | GPIO22 (L&R mixed) |
#+-----------------+-----------------+--------------+--------------------+
   # mute_pin: GPIO23
   # i2s_comm_fmt: lsb msb

#6 SCK xx - n.a
#5 BCK 26 - blau 
#4 DIN 23 - gelb alt 22
#3 LCK 25 - grün
#2 VCC = 5V unten links - rot
#1 GND = GND 24 oben rechts - braun
#####################################################################################
i2s_audio:
    i2s_bclk_pin: GPIO26
    i2s_lrclk_pin: GPIO25


media_player: 
  - platform: i2s_audio
    name: ESPHome I2S Media Player
    id: media_player_id
    dac_type: external
    i2s_dout_pin: GPIO23
    mode: mono
    on_play:
      #- logger.log: "Playback started!" 
      then:
        - logger.log: "Playback started!"
        - light.turn_on: 
           id: strip
           brightness: 30%

    on_idle:
      #- logger.log: "Playback finished!"
      then: 
      #- light.turn_off: strip
        - logger.log: "Playback finished!"
        - light.turn_on: 
           id: strip
           effect: scan
           brightness: 30%

    on_pause:
      #- logger.log: "Playback paused!" 
      then:
        - logger.log: "Playback paused!" 
        - light.turn_on: 
           id: strip
           effect: Color Wipe 
           brightness: 50%

    # on_state:
      #- logger.log: "State updated!"

#####################################################################################
#----------------------------
#   Globale Variablen
#----------------------------
globals:
  - id: button_press_timestamp
    restore_value: no
    type: uint32_t
    initial_value: '0'
#####################################################################################
time:
#parallel dauerhaft versuchen über wifi die Zeit zu syncen
  - platform: homeassistant
    id: my_time
    #on_time_sync:
    #  then:
        #- logger.log: "Synchronized system clock"
        #update der RTC
        #ds1302.write_time:
         #id: ds1302_time

  - platform: homeassistant
    id: my_time2
    on_time:
      - seconds: /10
        then:
#        - light.toggle: strip # rgb_light
#####################################################################################
# Binary Sensor definition
# Präsenzsensor
binary_sensor:

#####################################################################################
  - platform: status
    name: "d05 Online"
    id: d05_ha_connected
  - platform: gpio
    pin: 
      number: GPIO33
      inverted: true
      mode:
        input: true
        pullup: true
    id: reset_button
    on_press:
      then:
        - lambda: |-
            id(button_press_timestamp) = millis();
            
    on_release:
      then:

  - platform: template
    name: "d05 hell"
#####################################################################################
# Text Sensor definition
# WIFI Info Bereich
text_sensor:
  - platform: wifi_info
    ip_address:
      name: "d05 IP Address"
    ssid:
      name: "d05 Connected SSID"
#    bssid:
#      name: "${friendly_name} Connected BSSID"
    mac_address:
      name: "d05 Mac Wifi Address"

  - platform: template
    id: time_mytime2
    name: Time mytime2
    # Alternatively, you can use .utcnow() to get the current UTC time. %Y-%m-%d %H:%M:%S
    lambda: | 
      auto time_text = id(my_time).now().strftime("%H:%M:%S %d.%m.%Y");
      return {time_text};
    update_interval: 10s
#####################################################################################
sensor:
#  - platform: internal_temperature
#    name: "d04 ESP Temperature"
#    id: sys_esp_temperature

  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "d05 WiFi Signal"
    id: wifi_signal_db
    update_interval: 60s     #60s 120s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1
    entity_category: "diagnostic"

  - platform: uptime
    name: "d05 Uptime Sensor" 
    id: uptimesensor
#####################################################################################
#switch:
#####################################################################################
button:
  - platform: restart
    name: "d05 Restart"
    id: d05_restart  

  #- platform: template
  #  name: "d5 play"
  #  id d05_play
  #  on_press: 
  #    then:
        #- media_player.play: media_player_id
          
# Example configuration entry
#http_request:
#  useragent: esphome/device
#  timeout: 10s
#####################################################################################
light:
  - platform: neopixelbus  # fastled_clockless
    variant: WS2812X   #WS2812B chipset
    pin:  GPIO14       #144 $ledpin 
    num_leds: 144
    # color_correct: [30%, 30%, 30%]
    type: GRB    # rgb_order
    name: "d05 NEOPIXEL144Light"
    id: strip
    #default_transition_length: 1s
    #AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
    #restore_mode: ALWAYS_ON # ALWAYS_OFF
    #restore_mode: ALWAYS_OFF
    effects:
      - random:
      - random:
          name: Random Effect With Custom Values
          transition_length: 2s
          update_interval: 3s
      - strobe:
      - strobe:
          name: Strobe Effect With Custom Values
          colors:
            - state: true
              brightness: 100%
              red: 100%
              green: 00%
              blue: 0%
              duration: 500ms
            - state: false
              duration: 250ms
            - state: true
              brightness: 100%
              red: 0%
              green: 100%
              blue: 0%
              duration: 500ms
      - flicker:
      - flicker:
          name: Flicker Effect With Custom Values1
          alpha: 95%
          intensity: 1.5%
      - addressable_flicker:
      - addressable_flicker:
          name: Flicker Effect With Custom Values2
          update_interval: 16ms
          intensity: 5%
      - addressable_rainbow:
      - addressable_rainbow:
          name: Rainbow Effect Full
          speed: 10
          width: 8

      - addressable_rainbow:
          name: Rainbow Effect Half
          speed: 5
          width: 4
      - addressable_color_wipe:
      - addressable_color_wipe:
          name: Color Wipe Effect With Custom Values
          colors:
            - red: 100%
              green: 100%
              blue: 100%
              num_leds: 1
            - red: 0%
              green: 0%
              blue: 0%
              num_leds: 1
          add_led_interval: 100ms
          reverse: false
      - addressable_scan:
      - addressable_scan:
          name: Scan Effect With Custom Values
          move_interval: 100ms
          scan_width: 1
      - addressable_twinkle:
      - addressable_twinkle:
          name: Twinkle Effect With Custom Values
          twinkle_probability: 5%
          progress_interval: 4ms
      - addressable_fireworks:
      - addressable_fireworks:
          name: Fireworks Effect With Custom Values
          update_interval: 32ms
          spark_probability: 10%
          use_random_color: false
          fade_out_rate: 120

      - automation:
          name: Custom Automation Effect
          sequence:
          - light.addressable_set:
              id: strip
              red: 100%
              green: 100%
              blue: 100%
          - delay: 1000ms
          - light.addressable_set:
              id: strip
              range_from: 0
              range_to: 144
              red: 100%
              green: 0%
              blue: 0%
#####################################################################################
web_server:
  port: 80
  version: 2
  local: true
  auth:
    username: d05
    password: control