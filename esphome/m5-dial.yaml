substitutions:
  devicename: "m5-dial"
  friendly_name: "m5-dial1"
  wifi_ssid: !secret wifi_ssid
  wifi_password: !secret wifi_password  

esphome:
  name: ${devicename}
  name_add_mac_suffix: false
  friendly_name: "m5-dial1"
  comment: 192.168.1.118, M5Dial, rotary button
#  project:
#    name: smarthomeyourself.m5_dial
#    version: "1.0"
  compile_process_limit: 1
#  platformio_options:
#    board_build.flash_mode: dio
#    lib_deps:
#      - WiFi
#      - SPI
#      - FS
#     - Wire
#      - EEPROM
#      - ArduinoJson
#      - m5stack/M5Unified
#      - m5stack/M5Dial
    
esp32:
  board: esp32-s3-devkitc-1
  framework:
    type: arduino

logger:
  level: DEBUG

mdns:
  disabled: false #default
  
api:
  encryption:
    key: v1Rt5j/BiibHjpTX60onKOeEK4tLk97B/N1gzxbP4BM=
ota:

improv_serial:
  #next_url: http://example.com/?device_name={{device_name}}&ip_address={{ip_address}}&esphome_version={{esphome_version}}


wifi:
  ssid: ${wifi_ssid}
  password: ${wifi_password}
  power_save_mode: none
  reboot_timeout: 0s
#  domain: ".local"       #  domain  .fritz.box 
#  output_power: 20dB
  fast_connect: true
  ap:
    password: "12345678"

packages:
  m5_tough_package:
    url: https://github.com/SmartHome-yourself/m5-dial-for-esphome
    ref: dev
    file: shys-m5-dial.yaml
    refresh: 10s

external_components:
  - source:
      type: git
      url: https://github.com/SmartHome-yourself/m5-dial-for-esphome/
      ref: dev
    components: [shys_m5_dial]

time:
  - platform: homeassistant
    id: homeassistant_time
    timezone: Europe/Berlin

  - platform: homeassistant
    id: my_time2
    on_time:
      - seconds: /10
        then:
#        - light.toggle: rgb_light

#dashboard_import:
# 1.Pack Default
  #package_import_url: github://esphome/firmware/esphome-web/esp32s3.yaml@v2
  #import_full_config: true
# 2. Pack shys-m5-dail
#  package_import_url: github://SmartHome-yourself/m5-dial-for-esphome/shys-m5-dial.yaml@main
#  import_full_config: false   

#web_server:  # aktiv mit domain: ".local"
#   port: 80 

web_server:
  port: 80
  version: 2
  local: true
  auth:
    username: dial
    password: control

binary_sensor:
  - platform: gpio
    pin:
      number: 39
      inverted: true
    name: "${name} Button"
    on_press:
      then:
#        - light.toggle: my_light1

  - platform: status
    name: "${name} Status"

#i2c:
#  sda: GPIO13  #21
#  scl: GPIO15  #22
#  scan: true
#  id: bus_a
     
sensor:
#  - platform: bme280_i2c
#    temperature:
#      name: "${name} BME280 Temperature"
#      #id: ${friendly_name}_bme280_temperature
#   pressure:
#      name: "${name} BME280 Pressure"
#      #id: ${friendly_name}_bme280_pressure
#    humidity:
#      name: "${name} BME280 Relative Humidity"
#      #id: ${friendly_name}_bme280_humidity
#    address: 0x76
#    update_interval: 30s

  - platform: wifi_signal
    name: "${name} WiFi Signal"
    #id: ${name}_wifisignal
    update_interval: 4s     #60s
    filters:
      - sliding_window_moving_average:
          window_size: 15
          send_every: 15
          send_first_at: 1

  - platform: uptime
    name: "${name} Uptime Sensor" 
    #id: ${name}_uptimesensor

text_sensor:
  - platform: wifi_info
    ip_address:
      name: "${name} IP Address"
      #id: ${name}_ipaddress
    ssid:
      name: "${name} Connected SSID"
      #id: ${name}_connectedssid

  - platform: template
    id: time_mytime2
    name: Time mytime2
    # Alternatively, you can use .utcnow() to get the current UTC time. %Y-%m-%d %H:%M:%S
    lambda: | 
      auto time_text = id(my_time2).now().strftime("%H:%M:%S %d.%m.%Y");
      return {time_text};
    update_interval: 10s

switch:
  - platform: restart
    name: "${name} Restart"
    #id: ${friendly_name}_restart   

  - platform: shutdown
    name: "${name} Shutdown"  
    #id: ${friendly_name}_shutdown

shys_m5_dial:
  name: Dial
  time_component: homeassistant_time
  screen_off_time: 45000
  screensaver: clock
  rotary_step_width: 5
  long_press_duration: 1200
  font: default
  font_factor: 1

  devices:
    lights:
      - entity: light.my_light1
        name: Light 1
        modes:
          dimm_mode:
            enable: true
            rotary_step_width: 10
          rgb_mode: 
            enable: true
            rotary_step_width: 30
          white_mode: 
            enable: true
            rotary_step_width: 100
            min_kelvin: 2500
            max_kelvin: 7000
            
      - entity: light.my_light2
        name: Light 2

    switches:
      - entity: switch.my_switch
        name: Switch 1

    climates:
      - entity: climate.my_climate1
        name: Heater
        modes:
          temp_mode:
            rotary_step_width: 1
            min_temperature: 4
            max_temperature: 30
      - entity: climate.my_climate1
        name: Air Conditioning
        modes:
          temp_mode:
            rotary_step_width: 1
            min_temperature: 16
            max_temperature: 24
          fan_mode:
            rotary_step_width: 1
            modes:
              - auto
              - low
              - high

    covers:
      - entity: cover.my_cover1
        name: Cover 1
        modes:
          position_mode:
            rotary_step_width: 5

    fans:
      - entity: fan.my_fan1
        name: Fan 1
        modes:
          speed_mode:
            changeable_direction: true
            rotary_step_width: 10

    media_player:
      - entity: media_player.my_player1
        name: MediaPlayer 1
        modes:
          play_mode:
            rotary_step_width: 10
          source_mode:
            rotary_step_width: 1
            sources:
              - name: 1Live
                content_id: 1Live
                content_type: TUNEIN


    #lock:
    #  - entity: lock.my_lock1
    #    name: Lock 1
    #    modes:
    #      lock_mode:
    #        rotary_step_width: 1
    #        open_on_button: false

    number:
      - entity: number.my_number
        name: Number 1

      - entity: input_number.my_input_number
        name: Input Number 1

    timer:
      - entity: timer.my_timer
        name: Timer 1

